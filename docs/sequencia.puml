@startuml Sequencia_SADFI_Sprint2
title Diagrama de Sequência – SAD-FI (Sprint 2)

skinparam defaultFontName "Arial"
skinparam shadowing false
autonumber

actor Usuario
participant "UI / Notebook\n(Presentation)" as UI
participant "ControladorApp\n(Application)" as Ctrl
participant "SimuladorSAC\n(Domain)" as SimSAC
participant "SimuladorSAC_IPCA\n(Domain)" as SimIPCA
participant "TabelaIPCA\n(Infrastructure/Data)" as Tabela
participant "SimulacaoResultado\n(Domain)" as Resultado
participant "ComparadorModalidades\n(Domain)" as Comp
participant "RecomendadorModalidade\n(Domain)" as Rec
participant "ExportadorCSV\n(Infrastructure)" as CSV

== Entrada & Validação ==
Usuario -> UI : Preenche parâmetros (valor, entrada, prazo, sistema, taxa, CSV IPCA)
UI -> Ctrl : executar_simulacao(dados_entrada)

alt sistema == "SAC"
  Ctrl -> SimSAC : simular(financiamento, taxa_base_mensal)
  SimSAC -> Resultado : retorna SimulacaoResultado
  Ctrl <-- Resultado : resultado_sac
else sistema == "SAC_IPCA"
  Ctrl -> Tabela : carregar/validar caminho_ipca
  Ctrl -> SimIPCA : simular(financiamento, tabela_ipca)\n(IPCA ±, juros sobre saldo corrigido,\núltima parcela ajustada)
  SimIPCA -> Resultado : retorna SimulacaoResultado
  Ctrl <-- Resultado : resultado_ipca
end

== Comparação (opcional) ==
UI -> Ctrl : comparar_modalidades(r1, r2)
Ctrl -> Comp : comparar(r1, r2)
Comp --> Ctrl : mensagem_comparacao

== Recomendação ==
Ctrl -> Rec : recomendar({ mensagem_comparacao })
Rec --> Ctrl : "Recomendado: ..."/empate

== Visualização ==
Ctrl -> UI : {resumos, mensagem, recomendação, dados p/ gráfico}

== Exportação (opcional) ==
UI -> Ctrl : exportar_resultado(simulacao_resultado, nome_base)
Ctrl -> Resultado : to_dataframe()
Resultado --> Ctrl : DataFrame
Ctrl -> CSV : exportar_cronograma_csv(df, nome_base)
CSV --> Ctrl : caminho_arquivo
Ctrl -> UI : caminho_arquivo (resultados/....csv)

@enduml
